from pygame import *

back = (200, 255, 255)

win_wight = 700
win_height = 500
display.set_caption('pinga-ponga')
win = display.set_mode((win_wight,win_height ))
win.fill(back)

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        sprite.Sprite.__init__(self)
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
        self.size_x = size_x
        self.size_y = size_y
    def reset(self):
        win.blit(self.image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    def update_r(self):
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < (win_wight - 5 - self.size_y):
            self.rect.y += self.speed

    def update_l(self):
        keys = key.get_pressed()
        if keys[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_s] and self.rect.x < (win_wight - 5 - self.size_y):
            self.rect.y += self.speed



roket1 = Player('rararaketka.png', 0, 40, 40, 150, 5)
roket2 = Player('rararaketka.png', 650, 40, 40,150, 5)
ball = GameSprite('mamamamach.png', 250, 250, 50, 50, 5)


speed_x = 3
speed_y = 3
win.fill(back)
clock = time.Clock()
FPS = 60
game = True
finish = False
font.init()
font = font.Font(None, 35)
lose1 = font.render('PLAYER 1 LOSE', True, (100, 0, 0))
lose2 = font.render('PLAYER 2 LOSE', True, (100, 0, 0))
while game:

    for e in event.get(): 
        keys = key.get_pressed()
        if keys[K_SPACE]:
            if num_fire < 8 and real_time == False:
                fire.play()
                player.fire()
                num_fire += 1
            if num_fire >= 8 and real_time == False:
                last_time = timer()
                real_time = True
        if e.type == QUIT:
            game = False
    if not finish:
        win.fill(back)
        ball.rect.x += speed_x
        ball.rect.y += speed_y
        if sprite.collide_rect(roket1, ball) or sprite.collide_rect(roket2, ball):
            speed_x *= -1
            speed_y *= 1
        if ball.rect.y > win_height-50 or ball.rect.y < 0:
            speed_y *= -1
        if ball.rect.x < 0:
            finish = True
            win.blit(lose1, (200,200))
            game_over = True
        if ball.rect.x > win_wight:
            finish = True
            win.blit(lose2, (200, 200))
            game_over = True


  
       
        roket1.reset()
        roket1.update_l()
        roket2.reset()
        roket2.update_r()
        ball.reset()

        
        display.update()
    clock.tick(FPS)
